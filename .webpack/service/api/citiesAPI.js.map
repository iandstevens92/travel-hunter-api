{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./api/citiesAPI.js","webpack:///./config/app.js","webpack:///./controllers/citiesController.js","webpack:///./db/dynamoDB.js","webpack:///external \"aws-sdk\"","webpack:///external \"source-map-support/register\""],"names":["getCities","event","context","callback","Items","controller","statusCode","body","JSON","stringify","message","data","e","error","IS_OFFLINE","process","env","params","TableName","TRAVEL_HUNTER_TABLE","KeyConditionExpression","ExpressionAttributeNames","ExpressionAttributeValues","ProjectionExpression","Promise","resolve","revoke","dynamoDB","query","err","console","log","AWS","DynamoDB","DocumentClient","region","endpoint","convertEmptyValues"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;AClFA;;AAEA,MAAMA,SAAS,GAAG,OAAOC,KAAP,EAAcC,OAAd,EAAuBC,QAAvB,KAAoC;AACrD,MAAI;AACH,UAAM;AAAEC;AAAF,QAAY,MAAMC,uEAAA,EAAxB;AACAF,YAAQ,CAAC,IAAD,EAAO;AACdG,gBAAU,EAAE,GADE;AAEdC,UAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,eAAO,EAAE;AADW,OAAf,CAFQ;AAKdC,UAAI,EAAEP;AALQ,KAAP,CAAR;AAOA,GATD,CASE,OAAOQ,CAAP,EAAU;AACXT,YAAQ,CAAC,IAAD,EAAO;AACdG,gBAAU,EAAE,GADE;AAEdC,UAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpBC,eAAO,EAAE,+BADW;AAEpBG,aAAK,EAAED;AAFa,OAAf;AAFQ,KAAP,CAAR;AAOA;AACD,CAnBD;;;;;;;;;;;;;;;;;;;ACFO,MAAME,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYF,UAA/B,C;;;;;;;;;;;;;;;;;;ACAP;;AAEA,MAAMd,SAAS,GAAG,MAAM;AACvB,QAAMiB,MAAM,GAAG;AACdC,aAAS,EAAEH,OAAO,CAACC,GAAR,CAAYG,mBADT;AAEdC,0BAAsB,EAAE,mBAFV;AAGdC,4BAAwB,EAAE;AACzB,eAAS;AADgB,KAHZ;AAMdC,6BAAyB,EAAE;AAC1B,mBAAa;AADa,KANb;AASdC,wBAAoB,EAAE;AATR,GAAf;AAYA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvCC,wDAAQ,CAACC,KAAT,CAAeX,MAAf,EAAuB,CAACY,GAAD,EAAMlB,IAAN,KAAe;AACrC,UAAIkB,GAAJ,EAAS;AACRC,eAAO,CAACjB,KAAR,CAAc,mCAAd,EAAmDL,IAAI,CAACC,SAAL,CAAeoB,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAnD;AACAH,cAAM,CAACG,GAAD,CAAN;AACA,OAHD,MAGO;AACNC,eAAO,CAACC,GAAR,CAAY,kBAAZ;AACAN,eAAO,CAACd,IAAD,CAAP;AACA;AACD,KARD;AASA,GAVM,CAAP;AAWA,CAxBD;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAEA,MAAMgB,QAAQ,GAAGb,sDAAU,GACxB,IAAIkB,8CAAG,CAACC,QAAJ,CAAaC,cAAjB,CAAgC;AAChCC,QAAM,EAAE,WADwB;AAEhCC,UAAQ,EAAE,uBAFsB;AAGhCC,oBAAkB,EAAE;AAHY,CAAhC,CADwB,GAMxB,IAAIL,8CAAG,CAACC,QAAJ,CAAaC,cAAjB,CAAgC;AAChCG,oBAAkB,EAAE;AADY,CAAhC,CANH;AAUeV,uEAAf,E;;;;;;;;;;;ACbA,oC;;;;;;;;;;;ACAA,wD","file":"api/citiesAPI.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./api/citiesAPI.js\");\n","import * as controller from \"../controllers/citiesController\";\r\n\r\nconst getCities = async (event, context, callback) => {\r\n\ttry {\r\n\t\tconst { Items } = await controller.getCities();\r\n\t\tcallback(null, {\r\n\t\t\tstatusCode: 200,\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tmessage: \"Returned list of cities\",\r\n\t\t\t}),\r\n\t\t\tdata: Items,\r\n\t\t});\r\n\t} catch (e) {\r\n\t\tcallback(null, {\r\n\t\t\tstatusCode: 500,\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tmessage: \"Problem querying the database\",\r\n\t\t\t\terror: e,\r\n\t\t\t}),\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport { getCities };\r\n","export const IS_OFFLINE = process.env.IS_OFFLINE;\r\n","import dynamoDB from \"../db/dynamoDB\";\r\n\r\nconst getCities = () => {\r\n\tconst params = {\r\n\t\tTableName: process.env.TRAVEL_HUNTER_TABLE,\r\n\t\tKeyConditionExpression: \"#city = :cityName\",\r\n\t\tExpressionAttributeNames: {\r\n\t\t\t\"#city\": \"id\",\r\n\t\t},\r\n\t\tExpressionAttributeValues: {\r\n\t\t\t\":cityName\": \"City\",\r\n\t\t},\r\n\t\tProjectionExpression: \"sort_key, best_time, average_price, average_age\",\r\n\t};\r\n\r\n\treturn new Promise((resolve, revoke) => {\r\n\t\tdynamoDB.query(params, (err, data) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.error(\"Couldn't get city list from table\", JSON.stringify(err, null, 2));\r\n\t\t\t\trevoke(err);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Query succeeded.\");\r\n\t\t\t\tresolve(data);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n};\r\n\r\nexport { getCities };\r\n","import AWS from \"aws-sdk\";\r\nimport { IS_OFFLINE } from \"../config/app\";\r\n\r\nconst dynamoDB = IS_OFFLINE\r\n\t? new AWS.DynamoDB.DocumentClient({\r\n\t\t\tregion: \"localhost\",\r\n\t\t\tendpoint: \"http://localhost:8000\",\r\n\t\t\tconvertEmptyValues: true,\r\n\t  })\r\n\t: new AWS.DynamoDB.DocumentClient({\r\n\t\t\tconvertEmptyValues: true,\r\n\t  });\r\n\r\nexport default dynamoDB;\r\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"source-map-support/register\");"],"sourceRoot":""}